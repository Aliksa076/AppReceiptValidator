// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"AppReceiptValidator::AppReceiptValidatorPackageTests::ProductTarget" /* AppReceiptValidatorPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_97 /* Build configuration list for PBXAggregateTarget "AppReceiptValidatorPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_100 /* PBXTargetDependency */,
			);
			name = AppReceiptValidatorPackageTests;
			productName = AppReceiptValidatorPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_106 /* AppReceiptPropertyValidationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* AppReceiptPropertyValidationTests.swift */; };
		OBJ_107 /* AppReceiptValidationInAppPurchaseTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* AppReceiptValidationInAppPurchaseTests.swift */; };
		OBJ_108 /* AppReceiptValidationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* AppReceiptValidationTests.swift */; };
		OBJ_109 /* DeviceIdentifierTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* DeviceIdentifierTests.swift */; };
		OBJ_110 /* Date+Convenience.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Date+Convenience.swift */; };
		OBJ_111 /* KnownOrUnknown.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* KnownOrUnknown.swift */; };
		OBJ_112 /* TestAssetLoading.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* TestAssetLoading.swift */; };
		OBJ_114 /* AppReceiptValidator.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "AppReceiptValidator::AppReceiptValidator::Product" /* AppReceiptValidator.framework */; };
		OBJ_115 /* OpenCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "open-crypto::OpenCrypto::Product" /* OpenCrypto.framework */; };
		OBJ_116 /* COpenCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */; };
		OBJ_124 /* c_open_crypto.c in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* c_open_crypto.c */; };
		OBJ_130 /* AES.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* AES.swift */; };
		OBJ_131 /* ChaChaPoly.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* ChaChaPoly.swift */; };
		OBJ_132 /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* Digest.swift */; };
		OBJ_133 /* Errors.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* Errors.swift */; };
		OBJ_134 /* Exports.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* Exports.swift */; };
		OBJ_135 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* HMAC.swift */; };
		OBJ_136 /* HashFunction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* HashFunction.swift */; };
		OBJ_137 /* HashedAuthenticationCode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* HashedAuthenticationCode.swift */; };
		OBJ_138 /* HexEncoding.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* HexEncoding.swift */; };
		OBJ_139 /* Insecure.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* Insecure.swift */; };
		OBJ_140 /* MD5.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* MD5.swift */; };
		OBJ_141 /* MessageAuthenticationCode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* MessageAuthenticationCode.swift */; };
		OBJ_142 /* OpenSSLCipherFunction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* OpenSSLCipherFunction.swift */; };
		OBJ_143 /* OpenSSLHashFunction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* OpenSSLHashFunction.swift */; };
		OBJ_144 /* SHA1.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* SHA1.swift */; };
		OBJ_145 /* SHA2.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* SHA2.swift */; };
		OBJ_146 /* SymmetricKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_56 /* SymmetricKey.swift */; };
		OBJ_147 /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_57 /* Utilities.swift */; };
		OBJ_149 /* COpenCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */; };
		OBJ_156 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* Package.swift */; };
		OBJ_73 /* AppReceiptValidator+Parameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* AppReceiptValidator+Parameters.swift */; };
		OBJ_74 /* AppReceiptValidator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* AppReceiptValidator.swift */; };
		OBJ_75 /* DeviceIdentifier+installedDeviceIdentifier_iOS.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* DeviceIdentifier+installedDeviceIdentifier_iOS.swift */; };
		OBJ_76 /* DeviceIdentifier+installedDeviceIdentifier_linux.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* DeviceIdentifier+installedDeviceIdentifier_linux.swift */; };
		OBJ_77 /* DeviceIdentifier+installedDeviceIdentifier_macOS.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* DeviceIdentifier+installedDeviceIdentifier_macOS.swift */; };
		OBJ_78 /* ASN1Helpers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* ASN1Helpers.swift */; };
		OBJ_79 /* KnownOrUnknown.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* KnownOrUnknown.swift */; };
		OBJ_80 /* OpenSSLWrappers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* OpenSSLWrappers.swift */; };
		OBJ_81 /* Receipt.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Receipt.swift */; };
		OBJ_82 /* UnofficialReceipt.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* UnofficialReceipt.swift */; };
		OBJ_84 /* OpenCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "open-crypto::OpenCrypto::Product" /* OpenCrypto.framework */; };
		OBJ_85 /* COpenCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */; };
		OBJ_95 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		C87AB42D23E1CF0B00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "open-crypto::OpenCrypto";
			remoteInfo = OpenCrypto;
		};
		C87AB42E23E1CF0B00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "open-crypto::COpenCrypto";
			remoteInfo = COpenCrypto;
		};
		C87AB42F23E1CF0B00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "open-crypto::COpenCrypto";
			remoteInfo = COpenCrypto;
		};
		C87AB43023E1CF0C00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "AppReceiptValidator::AppReceiptValidator";
			remoteInfo = AppReceiptValidator;
		};
		C87AB43123E1CF0C00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "open-crypto::OpenCrypto";
			remoteInfo = OpenCrypto;
		};
		C87AB43223E1CF0C00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "open-crypto::COpenCrypto";
			remoteInfo = COpenCrypto;
		};
		C87AB43323E1CF0D00EB149C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "AppReceiptValidator::AppReceiptValidatorTests";
			remoteInfo = AppReceiptValidatorTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"AppReceiptValidator::AppReceiptValidator::Product" /* AppReceiptValidator.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = AppReceiptValidator.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"AppReceiptValidator::AppReceiptValidatorTests::Product" /* AppReceiptValidatorTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = AppReceiptValidatorTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* AppReceiptValidator+Parameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AppReceiptValidator+Parameters.swift"; sourceTree = "<group>"; };
		OBJ_11 /* AppReceiptValidator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppReceiptValidator.swift; sourceTree = "<group>"; };
		OBJ_12 /* DeviceIdentifier+installedDeviceIdentifier_iOS.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DeviceIdentifier+installedDeviceIdentifier_iOS.swift"; sourceTree = "<group>"; };
		OBJ_13 /* DeviceIdentifier+installedDeviceIdentifier_linux.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DeviceIdentifier+installedDeviceIdentifier_linux.swift"; sourceTree = "<group>"; };
		OBJ_14 /* DeviceIdentifier+installedDeviceIdentifier_macOS.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DeviceIdentifier+installedDeviceIdentifier_macOS.swift"; sourceTree = "<group>"; };
		OBJ_16 /* ASN1Helpers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ASN1Helpers.swift; sourceTree = "<group>"; };
		OBJ_17 /* KnownOrUnknown.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KnownOrUnknown.swift; sourceTree = "<group>"; };
		OBJ_18 /* OpenSSLWrappers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OpenSSLWrappers.swift; sourceTree = "<group>"; };
		OBJ_19 /* Receipt.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Receipt.swift; sourceTree = "<group>"; };
		OBJ_20 /* UnofficialReceipt.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UnofficialReceipt.swift; sourceTree = "<group>"; };
		OBJ_23 /* AppReceiptPropertyValidationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppReceiptPropertyValidationTests.swift; sourceTree = "<group>"; };
		OBJ_24 /* AppReceiptValidationInAppPurchaseTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppReceiptValidationInAppPurchaseTests.swift; sourceTree = "<group>"; };
		OBJ_25 /* AppReceiptValidationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppReceiptValidationTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* DeviceIdentifierTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeviceIdentifierTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* Date+Convenience.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Date+Convenience.swift"; sourceTree = "<group>"; };
		OBJ_29 /* KnownOrUnknown.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KnownOrUnknown.swift; sourceTree = "<group>"; };
		OBJ_30 /* TestAssetLoading.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestAssetLoading.swift; sourceTree = "<group>"; };
		OBJ_34 /* c_open_crypto.c */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.c; path = c_open_crypto.c; sourceTree = "<group>"; };
		OBJ_36 /* c_open_crypto.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = c_open_crypto.h; sourceTree = "<group>"; };
		OBJ_37 /* module.modulemap */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.module-map"; name = module.modulemap; path = /Users/schmi/Projects/AppReceiptValidator/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap; sourceTree = "<group>"; };
		OBJ_40 /* AES.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AES.swift; sourceTree = "<group>"; };
		OBJ_41 /* ChaChaPoly.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ChaChaPoly.swift; sourceTree = "<group>"; };
		OBJ_42 /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Digest.swift; sourceTree = "<group>"; };
		OBJ_43 /* Errors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Errors.swift; sourceTree = "<group>"; };
		OBJ_44 /* Exports.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Exports.swift; sourceTree = "<group>"; };
		OBJ_45 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_46 /* HashFunction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HashFunction.swift; sourceTree = "<group>"; };
		OBJ_47 /* HashedAuthenticationCode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HashedAuthenticationCode.swift; sourceTree = "<group>"; };
		OBJ_48 /* HexEncoding.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HexEncoding.swift; sourceTree = "<group>"; };
		OBJ_49 /* Insecure.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Insecure.swift; sourceTree = "<group>"; };
		OBJ_50 /* MD5.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MD5.swift; sourceTree = "<group>"; };
		OBJ_51 /* MessageAuthenticationCode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MessageAuthenticationCode.swift; sourceTree = "<group>"; };
		OBJ_52 /* OpenSSLCipherFunction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OpenSSLCipherFunction.swift; sourceTree = "<group>"; };
		OBJ_53 /* OpenSSLHashFunction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OpenSSLHashFunction.swift; sourceTree = "<group>"; };
		OBJ_54 /* SHA1.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SHA1.swift; sourceTree = "<group>"; };
		OBJ_55 /* SHA2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SHA2.swift; sourceTree = "<group>"; };
		OBJ_56 /* SymmetricKey.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SymmetricKey.swift; sourceTree = "<group>"; };
		OBJ_57 /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utilities.swift; sourceTree = "<group>"; };
		OBJ_58 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/schmi/Projects/AppReceiptValidator/.build/checkouts/open-crypto/Package.swift"; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_64 /* AppReceiptValidator */ = {isa = PBXFileReference; lastKnownFileType = folder; path = AppReceiptValidator; sourceTree = SOURCE_ROOT; };
		OBJ_65 /* LICENSE */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		OBJ_66 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_67 /* demo-app.gif */ = {isa = PBXFileReference; lastKnownFileType = image.gif; path = "demo-app.gif"; sourceTree = "<group>"; };
		OBJ_9 /* AppleIncRootCertificate.cer */ = {isa = PBXFileReference; lastKnownFileType = file; path = AppleIncRootCertificate.cer; sourceTree = "<group>"; };
		"open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = COpenCrypto.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"open-crypto::OpenCrypto::Product" /* OpenCrypto.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = OpenCrypto.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_113 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_114 /* AppReceiptValidator.framework in Frameworks */,
				OBJ_115 /* OpenCrypto.framework in Frameworks */,
				OBJ_116 /* COpenCrypto.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_125 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_148 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_149 /* COpenCrypto.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_83 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_84 /* OpenCrypto.framework in Frameworks */,
				OBJ_85 /* COpenCrypto.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_15 /* Helper */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* ASN1Helpers.swift */,
				OBJ_17 /* KnownOrUnknown.swift */,
				OBJ_18 /* OpenSSLWrappers.swift */,
			);
			path = Helper;
			sourceTree = "<group>";
		};
		OBJ_21 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_22 /* AppReceiptValidatorTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_22 /* AppReceiptValidatorTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* AppReceiptPropertyValidationTests.swift */,
				OBJ_24 /* AppReceiptValidationInAppPurchaseTests.swift */,
				OBJ_25 /* AppReceiptValidationTests.swift */,
				OBJ_26 /* DeviceIdentifierTests.swift */,
				OBJ_27 /* Tools */,
			);
			name = AppReceiptValidatorTests;
			path = Sources/AppReceiptValidatorTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_27 /* Tools */ = {
			isa = PBXGroup;
			children = (
				OBJ_28 /* Date+Convenience.swift */,
				OBJ_29 /* KnownOrUnknown.swift */,
				OBJ_30 /* TestAssetLoading.swift */,
			);
			path = Tools;
			sourceTree = "<group>";
		};
		OBJ_31 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* open-crypto 4.0.0-beta.2 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_32 /* open-crypto 4.0.0-beta.2 */ = {
			isa = PBXGroup;
			children = (
				OBJ_33 /* COpenCrypto */,
				OBJ_38 /* COpenCryptoOpenSSL */,
				OBJ_39 /* OpenCrypto */,
				OBJ_58 /* Package.swift */,
			);
			name = "open-crypto 4.0.0-beta.2";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_33 /* COpenCrypto */ = {
			isa = PBXGroup;
			children = (
				OBJ_34 /* c_open_crypto.c */,
				OBJ_35 /* include */,
			);
			name = COpenCrypto;
			path = ".build/checkouts/open-crypto/Sources/COpenCrypto";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_35 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_36 /* c_open_crypto.h */,
				OBJ_37 /* module.modulemap */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_38 /* COpenCryptoOpenSSL */ = {
			isa = PBXGroup;
			children = (
			);
			name = COpenCryptoOpenSSL;
			path = ".build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_39 /* OpenCrypto */ = {
			isa = PBXGroup;
			children = (
				OBJ_40 /* AES.swift */,
				OBJ_41 /* ChaChaPoly.swift */,
				OBJ_42 /* Digest.swift */,
				OBJ_43 /* Errors.swift */,
				OBJ_44 /* Exports.swift */,
				OBJ_45 /* HMAC.swift */,
				OBJ_46 /* HashFunction.swift */,
				OBJ_47 /* HashedAuthenticationCode.swift */,
				OBJ_48 /* HexEncoding.swift */,
				OBJ_49 /* Insecure.swift */,
				OBJ_50 /* MD5.swift */,
				OBJ_51 /* MessageAuthenticationCode.swift */,
				OBJ_52 /* OpenSSLCipherFunction.swift */,
				OBJ_53 /* OpenSSLHashFunction.swift */,
				OBJ_54 /* SHA1.swift */,
				OBJ_55 /* SHA2.swift */,
				OBJ_56 /* SymmetricKey.swift */,
				OBJ_57 /* Utilities.swift */,
			);
			name = OpenCrypto;
			path = ".build/checkouts/open-crypto/Sources/OpenCrypto";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_21 /* Tests */,
				OBJ_31 /* Dependencies */,
				OBJ_59 /* Products */,
				OBJ_64 /* AppReceiptValidator */,
				OBJ_65 /* LICENSE */,
				OBJ_66 /* README.md */,
				OBJ_67 /* demo-app.gif */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_59 /* Products */ = {
			isa = PBXGroup;
			children = (
				"AppReceiptValidator::AppReceiptValidator::Product" /* AppReceiptValidator.framework */,
				"AppReceiptValidator::AppReceiptValidatorTests::Product" /* AppReceiptValidatorTests.xctest */,
				"open-crypto::OpenCrypto::Product" /* OpenCrypto.framework */,
				"open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* AppReceiptValidator */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* AppReceiptValidator */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* AppleIncRootCertificate.cer */,
				OBJ_10 /* AppReceiptValidator+Parameters.swift */,
				OBJ_11 /* AppReceiptValidator.swift */,
				OBJ_12 /* DeviceIdentifier+installedDeviceIdentifier_iOS.swift */,
				OBJ_13 /* DeviceIdentifier+installedDeviceIdentifier_linux.swift */,
				OBJ_14 /* DeviceIdentifier+installedDeviceIdentifier_macOS.swift */,
				OBJ_15 /* Helper */,
				OBJ_19 /* Receipt.swift */,
				OBJ_20 /* UnofficialReceipt.swift */,
			);
			name = AppReceiptValidator;
			path = Sources/AppReceiptValidator;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"AppReceiptValidator::AppReceiptValidator" /* AppReceiptValidator */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_69 /* Build configuration list for PBXNativeTarget "AppReceiptValidator" */;
			buildPhases = (
				OBJ_72 /* Sources */,
				OBJ_83 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_86 /* PBXTargetDependency */,
				OBJ_88 /* PBXTargetDependency */,
			);
			name = AppReceiptValidator;
			productName = AppReceiptValidator;
			productReference = "AppReceiptValidator::AppReceiptValidator::Product" /* AppReceiptValidator.framework */;
			productType = "com.apple.product-type.framework";
		};
		"AppReceiptValidator::AppReceiptValidatorTests" /* AppReceiptValidatorTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_102 /* Build configuration list for PBXNativeTarget "AppReceiptValidatorTests" */;
			buildPhases = (
				OBJ_105 /* Sources */,
				OBJ_113 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_117 /* PBXTargetDependency */,
				OBJ_118 /* PBXTargetDependency */,
				OBJ_119 /* PBXTargetDependency */,
			);
			name = AppReceiptValidatorTests;
			productName = AppReceiptValidatorTests;
			productReference = "AppReceiptValidator::AppReceiptValidatorTests::Product" /* AppReceiptValidatorTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"AppReceiptValidator::SwiftPMPackageDescription" /* AppReceiptValidatorPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_91 /* Build configuration list for PBXNativeTarget "AppReceiptValidatorPackageDescription" */;
			buildPhases = (
				OBJ_94 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = AppReceiptValidatorPackageDescription;
			productName = AppReceiptValidatorPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"open-crypto::COpenCrypto" /* COpenCrypto */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_120 /* Build configuration list for PBXNativeTarget "COpenCrypto" */;
			buildPhases = (
				OBJ_123 /* Sources */,
				OBJ_125 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = COpenCrypto;
			productName = COpenCrypto;
			productReference = "open-crypto::COpenCrypto::Product" /* COpenCrypto.framework */;
			productType = "com.apple.product-type.framework";
		};
		"open-crypto::OpenCrypto" /* OpenCrypto */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_126 /* Build configuration list for PBXNativeTarget "OpenCrypto" */;
			buildPhases = (
				OBJ_129 /* Sources */,
				OBJ_148 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_150 /* PBXTargetDependency */,
			);
			name = OpenCrypto;
			productName = OpenCrypto;
			productReference = "open-crypto::OpenCrypto::Product" /* OpenCrypto.framework */;
			productType = "com.apple.product-type.framework";
		};
		"open-crypto::SwiftPMPackageDescription" /* open-cryptoPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_152 /* Build configuration list for PBXNativeTarget "open-cryptoPackageDescription" */;
			buildPhases = (
				OBJ_155 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "open-cryptoPackageDescription";
			productName = "open-cryptoPackageDescription";
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "AppReceiptValidator" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_59 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"AppReceiptValidator::AppReceiptValidator" /* AppReceiptValidator */,
				"AppReceiptValidator::SwiftPMPackageDescription" /* AppReceiptValidatorPackageDescription */,
				"AppReceiptValidator::AppReceiptValidatorPackageTests::ProductTarget" /* AppReceiptValidatorPackageTests */,
				"AppReceiptValidator::AppReceiptValidatorTests" /* AppReceiptValidatorTests */,
				"open-crypto::COpenCrypto" /* COpenCrypto */,
				"open-crypto::OpenCrypto" /* OpenCrypto */,
				"open-crypto::SwiftPMPackageDescription" /* open-cryptoPackageDescription */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_105 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_106 /* AppReceiptPropertyValidationTests.swift in Sources */,
				OBJ_107 /* AppReceiptValidationInAppPurchaseTests.swift in Sources */,
				OBJ_108 /* AppReceiptValidationTests.swift in Sources */,
				OBJ_109 /* DeviceIdentifierTests.swift in Sources */,
				OBJ_110 /* Date+Convenience.swift in Sources */,
				OBJ_111 /* KnownOrUnknown.swift in Sources */,
				OBJ_112 /* TestAssetLoading.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_123 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_124 /* c_open_crypto.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_129 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_130 /* AES.swift in Sources */,
				OBJ_131 /* ChaChaPoly.swift in Sources */,
				OBJ_132 /* Digest.swift in Sources */,
				OBJ_133 /* Errors.swift in Sources */,
				OBJ_134 /* Exports.swift in Sources */,
				OBJ_135 /* HMAC.swift in Sources */,
				OBJ_136 /* HashFunction.swift in Sources */,
				OBJ_137 /* HashedAuthenticationCode.swift in Sources */,
				OBJ_138 /* HexEncoding.swift in Sources */,
				OBJ_139 /* Insecure.swift in Sources */,
				OBJ_140 /* MD5.swift in Sources */,
				OBJ_141 /* MessageAuthenticationCode.swift in Sources */,
				OBJ_142 /* OpenSSLCipherFunction.swift in Sources */,
				OBJ_143 /* OpenSSLHashFunction.swift in Sources */,
				OBJ_144 /* SHA1.swift in Sources */,
				OBJ_145 /* SHA2.swift in Sources */,
				OBJ_146 /* SymmetricKey.swift in Sources */,
				OBJ_147 /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_155 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_156 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_72 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_73 /* AppReceiptValidator+Parameters.swift in Sources */,
				OBJ_74 /* AppReceiptValidator.swift in Sources */,
				OBJ_75 /* DeviceIdentifier+installedDeviceIdentifier_iOS.swift in Sources */,
				OBJ_76 /* DeviceIdentifier+installedDeviceIdentifier_linux.swift in Sources */,
				OBJ_77 /* DeviceIdentifier+installedDeviceIdentifier_macOS.swift in Sources */,
				OBJ_78 /* ASN1Helpers.swift in Sources */,
				OBJ_79 /* KnownOrUnknown.swift in Sources */,
				OBJ_80 /* OpenSSLWrappers.swift in Sources */,
				OBJ_81 /* Receipt.swift in Sources */,
				OBJ_82 /* UnofficialReceipt.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_94 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_95 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_100 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "AppReceiptValidator::AppReceiptValidatorTests" /* AppReceiptValidatorTests */;
			targetProxy = C87AB43323E1CF0D00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_117 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "AppReceiptValidator::AppReceiptValidator" /* AppReceiptValidator */;
			targetProxy = C87AB43023E1CF0C00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_118 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "open-crypto::OpenCrypto" /* OpenCrypto */;
			targetProxy = C87AB43123E1CF0C00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_119 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "open-crypto::COpenCrypto" /* COpenCrypto */;
			targetProxy = C87AB43223E1CF0C00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_150 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "open-crypto::COpenCrypto" /* COpenCrypto */;
			targetProxy = C87AB42E23E1CF0B00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_86 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "open-crypto::OpenCrypto" /* OpenCrypto */;
			targetProxy = C87AB42D23E1CF0B00EB149C /* PBXContainerItemProxy */;
		};
		OBJ_88 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "open-crypto::COpenCrypto" /* COpenCrypto */;
			targetProxy = C87AB42F23E1CF0B00EB149C /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_103 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/AppReceiptValidatorTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = AppReceiptValidatorTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_104 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/AppReceiptValidatorTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = AppReceiptValidatorTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_121 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/COpenCrypto_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include";
				PRODUCT_BUNDLE_IDENTIFIER = COpenCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = COpenCrypto;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_122 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/COpenCrypto_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include";
				PRODUCT_BUNDLE_IDENTIFIER = COpenCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = COpenCrypto;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_127 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/OpenCrypto_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = OpenCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = OpenCrypto;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_128 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/OpenCrypto_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = OpenCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = OpenCrypto;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_153 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_154 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_70 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/AppReceiptValidator_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = AppReceiptValidator;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = AppReceiptValidator;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_71 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCrypto/include",
					"$(SRCROOT)/.build/checkouts/open-crypto/Sources/COpenCryptoOpenSSL",
					"$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto",
				);
				INFOPLIST_FILE = AppReceiptValidator.xcodeproj/AppReceiptValidator_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
					"-I/usr/local/Cellar/openssl@1.1/1.1.1d/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl@1.1/1.1.1d/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -I/usr/local/Cellar/openssl@1.1/1.1.1d/include -Xcc -fmodule-map-file=$(SRCROOT)/AppReceiptValidator.xcodeproj/GeneratedModuleMap/COpenCrypto/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = AppReceiptValidator;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = AppReceiptValidator;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_92 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_93 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_98 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_99 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_102 /* Build configuration list for PBXNativeTarget "AppReceiptValidatorTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_103 /* Debug */,
				OBJ_104 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_120 /* Build configuration list for PBXNativeTarget "COpenCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_121 /* Debug */,
				OBJ_122 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_126 /* Build configuration list for PBXNativeTarget "OpenCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_127 /* Debug */,
				OBJ_128 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_152 /* Build configuration list for PBXNativeTarget "open-cryptoPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_153 /* Debug */,
				OBJ_154 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "AppReceiptValidator" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_69 /* Build configuration list for PBXNativeTarget "AppReceiptValidator" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_70 /* Debug */,
				OBJ_71 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_91 /* Build configuration list for PBXNativeTarget "AppReceiptValidatorPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_92 /* Debug */,
				OBJ_93 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_97 /* Build configuration list for PBXAggregateTarget "AppReceiptValidatorPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_98 /* Debug */,
				OBJ_99 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
